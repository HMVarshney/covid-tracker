{"ast":null,"code":"import _regeneratorRuntime from\"/home/hm/Documents/ReactJS/GitHub/covid-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/hm/Documents/ReactJS/GitHub/covid-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/hm/Documents/ReactJS/GitHub/covid-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/hm/Documents/ReactJS/GitHub/covid-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/home/hm/Documents/ReactJS/GitHub/covid-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/home/hm/Documents/ReactJS/GitHub/covid-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{fetchDataIndia}from'../../api/index';import IndiaUI from'./india_ui';import{Bar}from'react-chartjs-2';import styles from'./india.module.css';import{Card,CardContent,Typography,Grid}from'@material-ui/core';import CountUp from'react-countup';import cx from'classnames';import image from'../../images/image.png';var IndiaTracker=/*#__PURE__*/function(_Component){_inherits(IndiaTracker,_Component);var _super=_createSuper(IndiaTracker);function IndiaTracker(){var _this;_classCallCheck(this,IndiaTracker);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={stateName:[],districtData:[[{}]],showGraph:false,stateToShow:'',districtDataBar:[{district:'Select State',confirmed:0,deaths:0}]};_this.getGraphData=function(stateName){var index=_this.state.stateName.indexOf(stateName);var districts=_this.state.districtData[[index]].map(function(districtName){return{district:districtName.district,confirmed:districtName.confirmed,deaths:districtName.deceased};});return districts;};_this.handleStateChange=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(stateName){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_this.setState({showGraph:true,stateToShow:stateName,districtDataBar:_this.getGraphData(stateName)});case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();return _this;}_createClass(IndiaTracker,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetchDataIndia();case 2:data=_context2.sent;this.setState({districtData:data.map(function(_ref2){var districtData=_ref2.districtData;return districtData;}),stateName:data.map(function(_ref3){var state=_ref3.state;return state;})});case 4:case\"end\":return _context2.stop();}}},_callee2,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"render\",value:function render(){if(!this.state.districtData[[32]]){return/*#__PURE__*/React.createElement(\"div\",null,\"Loading..\");}else return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"img\",{className:styles.image,src:image,alt:\"COVID-19\"}),/*#__PURE__*/React.createElement(Cards,{data:this.state.districtDataBar}),/*#__PURE__*/React.createElement(IndiaUI,{onChange:this.handleStateChange,stateName:this.state.stateName}),/*#__PURE__*/React.createElement(Charts,{data:this.state.districtDataBar}));}}]);return IndiaTracker;}(Component);var Charts=/*#__PURE__*/function(_Component2){_inherits(Charts,_Component2);var _super2=_createSuper(Charts);function Charts(){var _this2;_classCallCheck(this,Charts);for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}_this2=_super2.call.apply(_super2,[this].concat(args));_this2.state={chartData:{labels:_this2.props.data.map(function(_ref4){var district=_ref4.district;return district;}),datasets:[{data:0,backgroundColor:'black'}]}};return _this2;}_createClass(Charts,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(prevProps.data!==this.props.data){this.setState({chartData:{labels:this.props.data.map(function(_ref5){var district=_ref5.district;return district;}),datasets:[{data:this.props.data.map(function(_ref6){var confirmed=_ref6.confirmed;return confirmed;}),label:'Confirmed Cases',backgroundColor:'green'},{data:this.props.data.map(function(_ref7){var deaths=_ref7.deaths;return deaths;}),label:'Deaths',backgroundColor:'red'}]}});}}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:styles.container},/*#__PURE__*/React.createElement(Bar,{data:this.state.chartData}));}}]);return Charts;}(Component);var Cards=function Cards(props){console.log(props.data);var sum=function sum(total,num){return total+num;};var totalValue=function totalValue(){var confirmed=props.data.map(function(_ref8){var confirmed=_ref8.confirmed;return confirmed;});var deaths=props.data.map(function(_ref9){var deaths=_ref9.deaths;return deaths;});var totalConfirmed=confirmed.reduce(sum,0);var totaldeaths=deaths.reduce(sum,0);return{totalConfirmed:totalConfirmed,totaldeaths:totaldeaths};};console.log(totalValue());return/*#__PURE__*/React.createElement(\"div\",{className:styles.containerCards},/*#__PURE__*/React.createElement(Grid,{container:true,spacing:3,justify:\"center\"},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,md:3,component:Card,className:cx(styles.card,styles.infected)},/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(Typography,{color:\"textSecondary\",gutterBottom:true},\"Confirmed\"),/*#__PURE__*/React.createElement(Typography,{variant:\"h5\",component:\"h2\"},/*#__PURE__*/React.createElement(CountUp,{start:0,end:totalValue().totalConfirmed,duration:1.5,separator:\",\"})),/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",component:\"p\"},\"Number of confirmed cases\"))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,md:3,component:Card,className:cx(styles.card,styles.deaths)},/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(Typography,{color:\"textSecondary\",gutterBottom:true},\"Confirmed\"),/*#__PURE__*/React.createElement(Typography,{variant:\"h5\",component:\"h2\"},/*#__PURE__*/React.createElement(CountUp,{start:0,end:totalValue().totaldeaths,duration:1.5,separator:\",\"})),/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",component:\"p\"},\"Number of deaths\")))));};export default IndiaTracker;","map":{"version":3,"sources":["/home/hm/Documents/ReactJS/GitHub/covid-tracker/src/components/India/india.jsx"],"names":["React","Component","fetchDataIndia","IndiaUI","Bar","styles","Card","CardContent","Typography","Grid","CountUp","cx","image","IndiaTracker","state","stateName","districtData","showGraph","stateToShow","districtDataBar","district","confirmed","deaths","getGraphData","index","indexOf","districts","map","districtName","deceased","handleStateChange","setState","data","Charts","chartData","labels","props","datasets","backgroundColor","prevProps","label","container","Cards","console","log","sum","total","num","totalValue","totalConfirmed","reduce","totaldeaths","containerCards","card","infected"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {fetchDataIndia} from '../../api/index'\nimport IndiaUI from './india_ui'\nimport {Bar} from 'react-chartjs-2'\nimport styles from './india.module.css'\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\nimport image from '../../images/image.png';\n\n\nclass IndiaTracker extends Component {\n\n    async componentDidMount(){\n        const data = await fetchDataIndia();\n        this.setState({districtData:data.map(({districtData})=>(districtData)), \n        stateName:data.map(({state})=>(state))});\n    }\n    \n    state = { \n        stateName:[],\n        districtData:[[{}]],\n        showGraph:false,\n        stateToShow:'',\n        districtDataBar:[{\n            district:'Select State',\n            confirmed:0,\n            deaths:0\n        }]\n        \n    }\n\n    getGraphData=(stateName)=>{\n        let index = this.state.stateName.indexOf(stateName);\n        const districts = this.state.districtData[[index]].map((districtName)=>(\n            {district:districtName.district,\n                confirmed:districtName.confirmed,\n                deaths:districtName.deceased}));\n        \n        return(districts)\n    }\n\n    handleStateChange = async(stateName)=>{\n        \n        this.setState({showGraph:true, stateToShow:stateName, \n            districtDataBar:this.getGraphData(stateName)});\n    }\n\n\n    render(){ \n        \n        \n        if(!this.state.districtData[[32]]){\n            return(\n                <div>Loading..</div>\n            )\n        }else\n        return (\n           <div>\n               <img className={styles.image} src={image} alt=\"COVID-19\" />\n               <Cards data={this.state.districtDataBar} />\n               <IndiaUI onChange={this.handleStateChange} stateName={this.state.stateName} />\n               <Charts data={this.state.districtDataBar} />\n           </div>\n        )\n         \n}\n}\n\nclass Charts extends Component{\n\n    state={\n        chartData:{\n            labels:this.props.data.map(({district})=>(district)),\n            datasets:[{\n                data:0,\n                backgroundColor:'black'\n            }]\n        }\n    }\n\n    componentDidUpdate(prevProps){\n        if(prevProps.data!==this.props.data){\n            this.setState({chartData:{labels:this.props.data.map(({district})=>(district)),\n            datasets:[{\n                data:this.props.data.map(({confirmed})=>(confirmed)),\n                label:'Confirmed Cases',\n                backgroundColor:'green'\n            },\n            {\n                data:this.props.data.map(({deaths})=>(deaths)),\n                label:'Deaths',\n                backgroundColor:'red'\n            }\n        ]    \n        \n        }})\n        }\n    }\n\n    render(){\n        \n        return(\n            <div className={styles.container}>\n                <Bar \n                    data={this.state.chartData}\n                />\n            </div>\n        )\n    }\n    \n}\n\nconst Cards = (props) => {\n    console.log(props.data);\n    \n    const sum = (total,num)=>{\n        return total+num;\n    }\n    const totalValue=()=>{\n        const confirmed = props.data.map(({confirmed})=>confirmed);\n        const deaths = props.data.map(({deaths})=>deaths);\n        const totalConfirmed = confirmed.reduce(sum,0);\n        const totaldeaths = deaths.reduce(sum,0);\n\n        return {totalConfirmed,totaldeaths};\n    }\n\n    console.log(totalValue());\n\n    return ( \n        \n        <div className={styles.containerCards}>\n        <Grid container spacing={3} justify=\"center\">\n            <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.infected)}>\n                <CardContent>\n                <Typography color=\"textSecondary\" gutterBottom>\n                    Confirmed\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\">\n                <CountUp start={0} end={totalValue().totalConfirmed} duration={1.5} separator=\",\" />\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                    Number of confirmed cases\n                </Typography>\n                </CardContent>\n            </Grid>\n            <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths)}>\n                <CardContent>\n                <Typography color=\"textSecondary\" gutterBottom>\n                    Confirmed\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\">\n                <CountUp start={0} end={totalValue().totaldeaths} duration={1.5} separator=\",\" />\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                    Number of deaths\n                </Typography>\n                </CardContent>\n            </Grid>\n        </Grid>\n        </div>\n     );\n}\n\n \nexport default IndiaTracker;"]},"metadata":{},"sourceType":"module"}